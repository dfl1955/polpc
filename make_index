#!/bin/bash

# make_index  Author : Dave Levy

# This program takes a file list as a list of words and then cuts the first column out of it.
# It relies on the filessytem names, the files are in ./db/ and the extract is to be in ./idx/
# the source files are to have the suffix postcodes.csv. 

PNAME=$0
PVER=1.1
echo $PNAME, $PVER starts
ofile_name=""
null=""
space=" "
db_dir="./db"
idx_dir="./idx"
index_column=1

# which files in ./db have no index

declare -a db_files idx_files

# which constituencies are in $db_dir

name="" ; i=0
echo Scanning database
for file in `ls ./${db_dir}`
do
  	if [ $file == "postcodes.csv" ];then
		len=${#name}
		db_files[$i]=${name:1:${len}}
		(( i = i + 1 ))
		name=""
	else
		name="$name ${file}"
	fi
done

# which constituencies are in ./idx
echo Scanning indexes

name="" ; i=0
for file in `ls ./${db_dir}`
do
  	if [ $file == "idx.txt" ];then
		len=${#name}
		idx_files[$i]=${name:1:${len}}
		(( i = i + 1 ))
		name=""
	else
		name="$name ${file}"
	fi
done

# what are the missing indexes

no_dbfiles=${#db_files[@]}
j=$no_dbfiles
i=0 ; k=0
declare -a missing_idx
echo Comparing lists
until [ $i == $j ]
do
	iname="${db_files[$i]} idx.txt"
	if [ -e "${idx_dir}/${iname}" ];then
	 	:
	else
		missing_idx[$k]=${db_files[$i]}
		(( k = k + 1 ))
	fi
	(( i = i + 1 ))
done
i=0
if [ $k == 0 ]; then
	echo all database files have an index
	exit
else
	until [ $i == $k ]
	do
		echo ${missing_idx[$i]} constituency has no index
		(( i = i + 1 ))
	done
fi

# while missing_idx
# state ifile, state ofile
# make index

echo Making indexes
i=0
until [ $i == $k ];
do
	constituency=${missing_idx[$1]}
	echo -n making index for $constituency
	ifile="${db_dir}/${constituency} postcodes.csv"
	ofile="${idx_dir}/${constituency} idx.txt"
	$( cat "${ifile}" | cut -f${index_column} -d"," > "${ofile}") && echo ... done
	(( i = i + 1 ))
done
